发现了一个比较好用的免费私有代码仓库：bitbucket


要求：

二、基于角色访问控制
（1）基本要求
对主体、客体、权限进行定义和配置
对角色及角色的层次关系进行定义
对角色的权限进行定义（有继承关系的就不用重新定义）
给出用户－角色多对多关系的配置
对用户的角色信息进行修改，通过访问控制实验，体现不同层次的角色访问权限的差别
对上述实验情况下访问成功和不成功的两种情形均给出结果

实验结果
通过人机对话界面定义和配置主体、客体、权限，进而定义角色及角色的层次关系，完成用户角色指派、角色权限指派，然后对主体请求访问客体进行RBAC访问控制。至少进行如下实验：
（1）将用户指派到一个角色r，查看该用户获得的权限情况
（2）R1、R2互斥，UA =｛ （a,R1），（a,R2），（b,R3），（c,R4），（d,R5）｝PA =｛（P1,R1），（P2,R2），（P3,R3），（P4,R4），（P5,R5），（P6,R6）｝。用户a建立session S，Ps=｛p1,p3,p4,p6｝或｛p2,p5｝，是否提供选择方式决定R1或R2？
（3）对一给定的角色层次，检查其中一角色被指派的权限，通过层次关系继承的权限，以及被指派和继承的权限是否正确？
（4）角色层次修改以及自动环路检测能力
（5）如u为某角色R的成员，如果角色层次发生变化（增加角色或删除角色），则u建立session S，检查Ps=？
（6）安全员、管理员、用户、角色以及权限设置与处理是否合乎规范？
然后，设计3-5种具体的访问请求，观察你的访问控制模块对这些访问请求如何做出回应，分别对系统访问成功和不成功的执行情况，给出是否符合预设的访问控制策略的结论。

注意
实现RBAC模型，基本的功能须完成用户角色指派和角色权限指派，其次是角色权限的强回收及角色成员资格的强回收。算法和代码实现方面可进行优化，如不用递归，可有效减短查询时间。特别对角色层次的修改，要防止上级角色被再次添加进角色层次图中成为下级角色，构成一个循环回路。因此，须编程实现角色层次修改以及自动环路检测。


3  主要参考材料
1. 访问控制概论  洪帆主编  华中科技大学出版社  2010年8月第1版
2. ROLE-BASED ACCESSS CONTROL
3. The ARBAC97 Model for Role-Based Administration of Roles
4. Secure Computer System:Unified Exposition And Multics Interpretation